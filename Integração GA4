# Projeto: AnÃ¡lise de Dados para Marketing Digital

## Estrutura do Projeto
# ðŸ“‚ marketing-data-analysis
# â”œâ”€â”€ ðŸ“‚ data  # Dados brutos e processados
# â”œâ”€â”€ ðŸ“‚ notebooks  # Jupyter Notebooks para anÃ¡lise
# â”œâ”€â”€ ðŸ“‚ scripts  # Scripts Python para ETL e automaÃ§Ã£o
# â”œâ”€â”€ ðŸ“‚ dashboards  # Arquivos para Looker Studio ou Power BI
# â”œâ”€â”€ README.md  # DocumentaÃ§Ã£o do projeto

# ImportaÃ§Ã£o das bibliotecas
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from google.cloud import bigquery
import requests

# ConfiguraÃ§Ã£o inicial
sns.set_style("whitegrid")

# FunÃ§Ã£o para carregar dados de BigQuery
def carregar_dados(query, project_id):
    client = bigquery.Client(project=project_id)
    df = client.query(query).to_dataframe()
    return df

# Exemplo de consulta SQL no BigQuery
QUERY = """
SELECT campaign, medium, source, sessions, conversions
FROM `projeto-marketing.analytics_data`
LIMIT 1000
"""

# Substituir pelo ID do seu projeto no GCP
PROJETO_ID = "seu-projeto-id"
df = carregar_dados(QUERY, PROJETO_ID)

# FunÃ§Ã£o para extrair dados do Google Analytics 4 (GA4)
def carregar_dados_ga4(property_id, access_token):
    url = f"https://analyticsdata.googleapis.com/v1beta/properties/{property_id}:runReport"
    headers = {
        "Authorization": f"Bearer {access_token}",
        "Content-Type": "application/json"
    }
    body = {
        "dateRanges": [{"startDate": "7daysAgo", "endDate": "yesterday"}],
        "metrics": [{"name": "sessions"}, {"name": "conversions"}],
        "dimensions": [{"name": "source"}, {"name": "medium"}]
    }
    response = requests.post(url, headers=headers, json=body)
    if response.status_code == 200:
        return pd.DataFrame(response.json().get("rows", []))
    else:
        print("Erro ao obter dados do GA4:", response.text)
        return pd.DataFrame()

# Exemplo de chamada para GA4 (necessÃ¡rio token vÃ¡lido)
PROPERTY_ID = "seu-property-id"
ACCESS_TOKEN = "seu-access-token"
df_ga4 = carregar_dados_ga4(PROPERTY_ID, ACCESS_TOKEN)

# VisualizaÃ§Ã£o inicial dos dados GA4
df_ga4.head()

# EstatÃ­sticas bÃ¡sicas
df.describe()

# GrÃ¡fico de conversÃµes por campanha
plt.figure(figsize=(12,6))
sns.barplot(x='campaign', y='conversions', data=df, palette='viridis')
plt.xticks(rotation=45)
plt.title('ConversÃµes por Campanha')
plt.show()

# Salvando relatÃ³rio CSV
df.to_csv("data/marketing_analysis.csv", index=False)
df_ga4.to_csv("data/ga4_analysis.csv", index=False)

print("AnÃ¡lise concluÃ­da! Dados salvos em 'data/marketing_analysis.csv' e 'data/ga4_analysis.csv'")
